name: Ebook CI/CD

on:
  push:
    branches:
      - main   # Trigger only on push to main branch

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # Build frontend
      - name: Install & Build Frontend
        working-directory: ./frontend
        run: |
          rm -f package-lock.json
          yarn install
          npx update-browserslist-db@latest
          npm run build

      # Install backend deps
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: yarn install

      # Copy project files to EC2
      - name: Copy project to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "."
          target: "/home/ubuntu/Ebook"

      # Deploy on EC2
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/Ebook

            # Create .env file for backend
            cd backend
            rm -f .env
            touch .env
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env

            # Install backend deps again (to ensure prod environment)
            yarn install --production

            # Restart backend with PM2
            pm2 stop ebook-backend || true
            pm2 start server.js --name "ebook-backend"

            # Serve frontend build with PM2
            cd ..
            pm2 stop ebook-frontend || true
            pm2 serve frontend/build 3000 --name "ebook-frontend" --spa

            # Save PM2 processes
            pm2 save
            pm2 restart all
            pm2 status
